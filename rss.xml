<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Yiming Chen</title>
    <link>https://yiming.dev</link>
    <description>My rants against Life and Software.</description>
    <pubDate>Fri, 17 Apr 2020 19:26:12 CST</pubDate>
    <lastBuildDate>Fri, 17 Apr 2020 19:26:12 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>OKR Case Study #1 - How to find KEY results?</title>
      <link>https://yiming.dev/blog/2020/04/17/okr-case-study-1-how-to-find-key-results</link>
      <description><![CDATA[In this series of OKR Case Studies, we'll walk through a few OKRs and explain how to define great OKRs. Let's first see how to find the KEY results for an objective.]]></description>
      <content:encoded><![CDATA[<section id="content" role="main">
    <div id="post-container">
        <h1>OKR Case Study #1 - How to find KEY results?</h1>
        <p>
This is the first post of my OKR Case Study series.
In this series, we'll walk through a few OKRs and explain how to define great OKRs.
Let's first see how to find the KEY results for an objective.
</p>

<p>
For every objective, we can set different results.
Some of them can help us focus on the objective and achieve what we really want.
They are the KEY results we want to use.
Some results are not really the KEY result.
They may not really related to the objective or may misguide people.
Finding the KEY results is one of the most important thing when setting your OKRs.
</p>

<div id="outline-container-org529a3bb" class="outline-2">
<h2 id="org529a3bb">Two ways to validate key results</h2>
<div class="outline-text-2" id="text-org529a3bb">
<p>
To check if our key results are really the KEY results, we can:
</p>

<ol class="org-ol">
<li><p>
Think about the worst actions we can take to achieve each key result.
</p>

<p>
We want key result to be a guidance for our actions, but not too restricted, nor lead to bad behaviours.
</p></li>

<li>Ask these two questions:
<ol class="org-ol">
<li>If we've already got all the key results listed here, can we call this objective achieved?</li>
<li>If a key result is not achieved (or we get the opposite of it), can we still achieve the same objective?</li>
</ol></li>
</ol>
</div>
</div>
<div id="outline-container-orgacabb24" class="outline-2">
<h2 id="orgacabb24">Always dig deeper</h2>
<div class="outline-text-2" id="text-orgacabb24">
<blockquote>
<p>
<b>Objective</b>: Improve efficiency and organization in projects
</p>
<ul class="org-ul">
<li>KR 1: Reduce sprint meetings by 15 minutes</li>
<li>KR 2: Close at least 80% of issues for each sprint</li>
</ul>
</blockquote>
<p>
The worst actions for these two results are simple:
</p>
<ol class="org-ol">
<li><p>
Stop every sprint call when we hit the time limit (say 45mins).
</p>

<p>
This is the worst action because we still want to continue (or improve) our communications with devs, and this action goes against this goal.
</p></li>

<li><p>
Close issues at the end of sprint, and create new ones if some of them are not finished/shipped.
</p>

<p>
This is the worst action because recreating unfinished issues is basically the same as moving the old issues to the next sprint but creates too many work overhead.
</p></li>
</ol>

<p>
Note that I'm not saying that we are definitely going to take the worse actions for the sake of achieving these key results. But considering these can help us digger deeper and find the key results we really want.
</p>

<p>
Now let's test these key results with the two questions above:
</p>

<ol class="org-ol">
<li><p>
If we've already reduced sprint calls by 15mins, is efficiency improved?
</p>

<p>
Maybe not, especially if we rushed through meetings and communications are bad.
</p>

<p>
And if we extend the sprint calls to a half day, but communications are extremely good, everybody knows what we are going to do in the following week. So everything goes smoothly in the following week, I think the efficiency is improved, too. (And I as a developer would be love to attend this half-day long sprint call)
</p>

<p>
So maybe time of sprint calls is not the <b>KEY</b> result here, but the <b>internal communication efficiency</b> (the result of this efficiency may appear in feature ship speed).
</p></li>

<li><p>
If we've closed 80% issues for each sprint, is efficiency improved?
</p>

<p>
Again, maybe not, especially if they are just closed when the sprint ends, or if we are just shipping 8 out of 10 tiny issues/features.
</p>

<p>
And if issues are not closed at all, but features are shipped faster and better, I'd call efficiency improved, too.
</p>

<p>
So maybe issue close rate is not the <b>KEY</b> result here, but the <b>feature ship rate/bug fix rate</b>.
</p></li>
</ol>

<p>
So, always review your OKR after you've defined one, and always dig deeper to find the real <b>KEY</b> results.
</p>
</div>
</div>

    </div>
</section>
]]></content:encoded>
      <pubDate>2020-04-17</pubDate>
      <guid>https://yiming.dev/blog/2020/04/17/okr-case-study-1-how-to-find-key-results</guid>
    </item>
    <item>
      <title>Clippings of 2020 Feb</title>
      <link>https://yiming.dev/clipping/2020/03/09/clippings-of-2020-feb</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-04-01</pubDate>
      <guid>https://yiming.dev/clipping/2020/03/09/clippings-of-2020-feb</guid>
    </item>
    <item>
      <title>物理学里的软件工程 - 《现实不似你所见》</title>
      <link>https://yiming.dev/clipping/2020/03/16/reality-is-not-what-it-seems-a-software-engineers-perspective</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-03-16</pubDate>
      <guid>https://yiming.dev/clipping/2020/03/16/reality-is-not-what-it-seems-a-software-engineers-perspective</guid>
    </item>
    <item>
      <title>What is an Effective OKR?</title>
      <link>https://yiming.dev/blog/2020/02/26/what-is-an-effective-okr</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-02-26</pubDate>
      <guid>https://yiming.dev/blog/2020/02/26/what-is-an-effective-okr</guid>
    </item>
    <item>
      <title>Clippings from A Philosophy of Software Design</title>
      <link>https://yiming.dev/clipping/2019/04/12/clippings-from-a-philosophy-of-software-design</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-02-10</pubDate>
      <guid>https://yiming.dev/clipping/2019/04/12/clippings-from-a-philosophy-of-software-design</guid>
    </item>
    <item>
      <title>Clippings of 2020 Jan</title>
      <link>https://yiming.dev/clipping/2020/02/04/clippings-of-2020-jan</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-02-05</pubDate>
      <guid>https://yiming.dev/clipping/2020/02/04/clippings-of-2020-jan</guid>
    </item>
    <item>
      <title>Clippings of 2019 Dec</title>
      <link>https://yiming.dev/clipping/2020/01/23/clippings-of-2019-dec</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-01-26</pubDate>
      <guid>https://yiming.dev/clipping/2020/01/23/clippings-of-2019-dec</guid>
    </item>
    <item>
      <title>没有 if，怎么写代码？ - GDCR 2019</title>
      <link>https://yiming.dev/blog/2020/01/15/gdcr-shanghai-summary-how-to-write-code-without-any-if-statement</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-01-21</pubDate>
      <guid>https://yiming.dev/blog/2020/01/15/gdcr-shanghai-summary-how-to-write-code-without-any-if-statement</guid>
    </item>
    <item>
      <title>How to Partially Restore a PostgreSQL Database?</title>
      <link>https://yiming.dev/blog/2020/01/13/how-to-partially-restore-a-postgre-sql-database</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-01-14</pubDate>
      <guid>https://yiming.dev/blog/2020/01/13/how-to-partially-restore-a-postgre-sql-database</guid>
    </item>
    <item>
      <title>How to Write Elixiry Ruby - Result Object</title>
      <link>https://yiming.dev/blog/2020/01/06/how-to-write-elixiry-ruby-result-object</link>
      <description><![CDATA[]]></description>
      <content:encoded><![CDATA[]]></content:encoded>
      <pubDate>2020-01-08</pubDate>
      <guid>https://yiming.dev/blog/2020/01/06/how-to-write-elixiry-ruby-result-object</guid>
    </item>
  </channel>
</rss>