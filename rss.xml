<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dsdshome</title>
    <link>http://dsdshcym.github.io</link>
    <description>This is my small blog :)</description>
    <pubDate>Mon, 29 Apr 2019 20:29:30 CST</pubDate>
    <lastBuildDate>Mon, 29 Apr 2019 20:29:30 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>Difficulties in Abstraction</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/29/difficulties-in-abstraction</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row" style="padding-top: 70px">
        <div class="col-md-2"></div>
            <h1>Difficulties in Abstraction</h1>
            <blockquote>
<ul class="org-ul">
<li>Designing an abstraction is an inverse problem
<ul class="org-ul">
<li>There is opacity of the structure of the system from observational
perspective.</li>
<li>An inverse problem in science is the process of calculating from a
set of observations the causal factors that produced them.</li>
</ul></li>
<li>Abstraction as a <a href="https://en.wikipedia.org/wiki/Inverse_problem">Inverse Problem</a>
<ul class="org-ul">
<li>Most of the business requirements we deal with, consists of
multiple parts interacting with each other.</li>
<li>For a given business requirement, it is generally difficult to
figure out its components and their interactions accurately based
on observations about the system.</li>
<li>It is difficult to reverse engineer a system compared to building one</li>
</ul></li>
<li>Abstraction depends on context
<ul class="org-ul">
<li>"A lock is a lock because of the key"
<ul class="org-ul">
<li>when we design abstractions for lock, we are also parallelly
designing abstractions for key.</li>
<li>We are always designing abstraction in pair most of the time
sub-consciously.</li>
</ul></li>
<li>The abstraction we derive is nothing but interactions between the
two components of the coupling.
<ul class="org-ul">
<li>As coupling changes the abstraction should also change.</li>
<li>But since only a part of the coupling is exhibited in code, <b>the
other part is often left to interpretations and assumptions.</b></li>
</ul></li>
<li><b>Our abstraction is always incomplete.</b></li>
</ul></li>
</ul>
</blockquote>
<p>
-- from <a href="https://shripad-agashe.github.io/2018/03/19/abstractions/">Difficulties in abstraction • Random Sparks</a>
</p>

<p>
Abstraction is a great power that we programmers possessed when we
code. But as uncle Ben said, "with great power comes great
responsibility." We need to be careful with abstracting our code and
business rules. Otherwise, we would probably shoot ourselves in our
foot when a wrong abstraction was built and we find that it’s hard to
reverse it.
</p>

    </div>
</section>
]]></description>
      <pubDate>2019-04-29</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/29/difficulties-in-abstraction</guid>
    </item>
    <item>
      <title>Your First Task Would Take the Most of The Time</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/25/your-first-task-would-take-the-most-of-the-time</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-27</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/25/your-first-task-would-take-the-most-of-the-time</guid>
    </item>
    <item>
      <title>从具象到抽象</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/24/从具象到抽象</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-26</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/24/从具象到抽象</guid>
    </item>
    <item>
      <title>Good, Fast, and Featureful. Pick Two!</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/19/good-fast-and-featureful-pick-two</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-20</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/19/good-fast-and-featureful-pick-two</guid>
    </item>
    <item>
      <title>The Super Mario Effect</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/16/the-super-mario-effect</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-19</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/16/the-super-mario-effect</guid>
    </item>
    <item>
      <title>Application-Infructructure Cycle in the Elixir world</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/15/application-infructructure-cycle-in-the-elixir-world</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-16</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/15/application-infructructure-cycle-in-the-elixir-world</guid>
    </item>
    <item>
      <title>Clippings from A Philosophy of Software Design</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/12/clippings-from-a-philosophy-of-software-design</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-13</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/12/clippings-from-a-philosophy-of-software-design</guid>
    </item>
    <item>
      <title>Values and Practices</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/11/values-and-practices</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-12</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/11/values-and-practices</guid>
    </item>
    <item>
      <title>Why Do We Need Managers?</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/12/why-do-we-need-managers</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-12</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/12/why-do-we-need-managers</guid>
    </item>
    <item>
      <title>&quot;Pattern Matching&quot; When Rendering Views in Rails</title>
      <link>http://dsdshcym.github.io/blog/2019/04/09/pattern-matching-when-rendering-views-in-rails</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-09</pubDate>
      <guid>http://dsdshcym.github.io/blog/2019/04/09/pattern-matching-when-rendering-views-in-rails</guid>
    </item>
  </channel>
</rss>