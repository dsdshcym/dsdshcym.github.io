<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>dsdshome</title>
    <link>http://dsdshcym.github.io</link>
    <description>This is my small blog :)</description>
    <pubDate>Tue, 09 Apr 2019 22:28:10 CST</pubDate>
    <lastBuildDate>Tue, 09 Apr 2019 22:28:10 CST</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>&quot;Pattern Matching&quot; When Rendering Views in Rails</title>
      <link>http://dsdshcym.github.io/blog/2019/04/09/pattern-matching-when-rendering-views-in-rails</link>
      <description><![CDATA[<section id="content" role="main">
    <div id="outline-container-sec-" class="row" style="padding-top: 70px">
        <div class="col-md-2"></div>
            <h1>&quot;Pattern Matching&quot; When Rendering Views in Rails</h1>
            
<div id="outline-container-org85c2843" class="outline-2">
<h2 id="org85c2843">What's Pattern Matching?</h2>
<div class="outline-text-2" id="text-org85c2843">
<p>
Pattern matching is a useful feature provided by many programming
languages. It can help because it reduces conditional statements
like <code>if</code> in our code and thus make our code more straightforward
and easier to understand.
</p>

<p>
Here is a quick example of pattern matching in Elixir:
</p>
<div class="org-src-container">
<pre class="src src-elixir">def string_based_on_locale("en") do
  "Hello, World!"
end

def string_based_on_locale("zh") do
  "你好，世界！"
end
</pre>
</div>
</div>
</div>
<div id="outline-container-org45db70f" class="outline-2">
<h2 id="org45db70f">Usage in Rails View Rendering</h2>
<div class="outline-text-2" id="text-org45db70f">
<p>
Pattern matching is so powerful that I even applied it unconsciously
when I worked in a Ruby/Rails app after I've dived into
Elixir/Phoenix world for some time.
</p>

<p>
Here is the case:
</p>
<ul class="org-ul">
<li>The app support two locales: English and Chinese.</li>
<li>And there are some UI differences other than translations in these
two versions.</li>
<li><p>
An example is navbar dropdown. So I turned dropdown into two
partials: <code>dropdown_zh.html.slim</code> and
<code>dropdown_en.html.slim</code>. Then render one of them based on current locale:
</p>
<div class="org-src-container">
<pre class="src src-ruby">render "dropdown_#{I18n.locale}"
</pre>
</div></li>
<li><p>
After I've written this code, I realized this is exactly like a
pattern matching. In Elixir, I would write:
</p>
<div class="org-src-container">
<pre class="src src-elixir">def render_dropdown("zh") do
end

def render_dropdown("en") do
end
</pre>
</div></li>
<li>Of course, this is a basic case for pattern matching. And
Ruby and Rails still don't more advanced pattern matching. But
it's still useful enough to show some strength:
<ol class="org-ol">
<li><p>
We don't need <code>if</code> statements like
</p>
<div class="org-src-container">
<pre class="src src-ruby">if I18n.locale == "zh"
  # ...
else
  # ...
end
</pre>
</div></li>
<li>If we want to add a dropdown for a new locale, we just add a
new template named after that locale, say
<code>dropdown_de.html.slim</code></li>
</ol></li>
</ul>
</div>
</div>
<div id="outline-container-orgf4941aa" class="outline-2">
<h2 id="orgf4941aa">Summary</h2>
<div class="outline-text-2" id="text-orgf4941aa">
<p>
Pattern matching is a language feature to achieve certain level of
polymorphism. We can still use the same technique in Ruby/Rails even
they don't provide such feature at language level. Let me know in the
comments below if you know any example like this.
</p>
</div>
</div>

    </div>
</section>
]]></description>
      <pubDate>2019-04-09</pubDate>
      <guid>http://dsdshcym.github.io/blog/2019/04/09/pattern-matching-when-rendering-views-in-rails</guid>
    </item>
    <item>
      <title>What&#39;s Right Doesn&#39;t Seem Right</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/08/what&#39;s-right-doesn&#39;t-seem-right</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-08</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/08/what&#39;s-right-doesn&#39;t-seem-right</guid>
    </item>
    <item>
      <title>Clippings from Accelerate: The Science of Lean Software and DevOps</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/07/clippings-from-accelerate-the-science-of-lean-software-and-dev-ops</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-07</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/07/clippings-from-accelerate-the-science-of-lean-software-and-dev-ops</guid>
    </item>
    <item>
      <title>TDD Gives You a Tractable Task Board</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/07/tdd-gives-you-a-tractable-task-board</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-07</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/07/tdd-gives-you-a-tractable-task-board</guid>
    </item>
    <item>
      <title>Clippings of 2019 Mar</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/03/clippings_of_2019_mar</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-03</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/03/clippings_of_2019_mar</guid>
    </item>
    <item>
      <title>硬影像：故事的意义与元素</title>
      <link>http://dsdshcym.github.io/clipping/2019/04/03/硬影像：故事的意义与元素</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-03</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/04/03/硬影像：故事的意义与元素</guid>
    </item>
    <item>
      <title>Agile Podcast Recording</title>
      <link>http://dsdshcym.github.io/blog/2019/03/29/agile-podcast-recording</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-04-01</pubDate>
      <guid>http://dsdshcym.github.io/blog/2019/03/29/agile-podcast-recording</guid>
    </item>
    <item>
      <title>LeBlanc&#39;s Law (a.k.a Later Equals Never)</title>
      <link>http://dsdshcym.github.io/clipping/2019/03/21/le-blanc&#39;s-law-a-k-a-later-equals-never</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-03-27</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/03/21/le-blanc&#39;s-law-a-k-a-later-equals-never</guid>
    </item>
    <item>
      <title>Keep Code Review In Scope</title>
      <link>http://dsdshcym.github.io/blog/2019/03/17/keep-code-review-in-scope</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-03-17</pubDate>
      <guid>http://dsdshcym.github.io/blog/2019/03/17/keep-code-review-in-scope</guid>
    </item>
    <item>
      <title>Practical Tools for Playing Well with Others</title>
      <link>http://dsdshcym.github.io/clipping/2019/03/16/practical-tools-for-playing-well-with-others</link>
      <description><![CDATA[]]></description>
      <pubDate>2019-03-16</pubDate>
      <guid>http://dsdshcym.github.io/clipping/2019/03/16/practical-tools-for-playing-well-with-others</guid>
    </item>
  </channel>
</rss>